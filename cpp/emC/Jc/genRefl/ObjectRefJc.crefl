
    
#include <emC/Jc/ObjectRefJc.h>  


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_ObjectJc_Y;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_ObjectJc_Y[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

extern_C const ClassJc refl_ObjectJcREF;  //used for field data

const struct Reflection_Fields_ObjectJc_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_ObjectJc_Y =
{ INIZ_ObjectArrayJc(refl_Fields_ObjectJc_Y, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ObjectJc_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ObjectJc_Y
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , &refl_ObjectJcREF                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ObjectJc_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ObjectJc_Y
    }
  
} }; 
 

#define DEFINED_refl_ObjectJc_Y    
const ClassJc   refl_ObjectJc_Y =
{ INIZ_objReflId_ObjectJc(refl_ObjectJc_Y, refl_ClassJc, ID_refl_ClassJc)
, "ObjectJc_Y"
, 0
, sizeof(ObjectJc_Y)
, (FieldJcArray const*)&refl_Fields_ObjectJc_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL
