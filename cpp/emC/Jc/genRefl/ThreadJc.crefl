
    
#include <emC/Jc/ThreadJc.h>  


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_RunnableJc;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_RunnableJc[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL

  

extern_C const ClassJc refl_ObjectJc;  //the super class here used.
const struct SuperClasses_RunnableJc_s_ClassOffset_idxVtblJcARRAY_t  //Type for the super class
{ ObjectArrayJc head;
  ClassOffset_idxVtblJc data[1];
}  superClasses_RunnableJc_s =   //reflection instance for the super class
{ INIZ_ObjectArrayJc(superClasses_RunnableJc_s, 1, ClassOffset_idxVtblJc, refl_ClassOffset_idxVtblJc, ID_refl_ClassOffset_idxVtblJc)
  , { &refl_ObjectJc                                   
    , 0 //TODO Index of mtbl of superclass
      //The field which presents the superclass data in inspector access.
    , { "super"              
      , 0 //arraysize
      , &refl_ObjectJc  //type of super                                                                                         
      , kEmbedded_Modifier_reflectJc //hint: embd helps to show the real type.
        | (0<< kBitAccessLevel_Modifier_FieldJc)  //access level
        | (7<< kBitChangeLevel_Modifier_FieldJc)  //never change
      , 0 //offsetalways 0 (C++?)
      , 0  //offsetToObjectifcBase
      , &refl_ObjectJc  
      }
    }
};

#define DEFINED_refl_RunnableJc    
const ClassJc   refl_RunnableJc =
{ INIZ_objReflId_ObjectJc(refl_RunnableJc, refl_ClassJc, ID_refl_ClassJc)
, "RunnableJc"
, 0
, sizeof(RunnableJc_s)
, null  //attributes and associations
, null  //method      
, &superClasses_RunnableJc_s.head.object  //superclass  
, null  //interfaces  
, mObjectJc_Modifier_reflectJc   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_RunnableJc_Y;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_RunnableJc_Y[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

extern_C const ClassJc refl_RunnableJc;  //used for field data

const struct Reflection_Fields_RunnableJc_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_RunnableJc_Y =
{ INIZ_ObjectArrayJc(refl_Fields_RunnableJc_Y, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((RunnableJc_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_RunnableJc_Y
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , &refl_RunnableJc                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((RunnableJc_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_RunnableJc_Y
    }
  
} }; 
 

#define DEFINED_refl_RunnableJc_Y    
const ClassJc   refl_RunnableJc_Y =
{ INIZ_objReflId_ObjectJc(refl_RunnableJc_Y, refl_ClassJc, ID_refl_ClassJc)
, "RunnableJc_Y"
, 0
, sizeof(RunnableJc_Y)
, (FieldJcArray const*)&refl_Fields_RunnableJc_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_ThreadJc;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_ThreadJc[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


extern_C const ClassJc refl_StringJc;  //used for field name

extern_C const ClassJc refl_RunnableJcREF;  //used for field target
  

extern_C const ClassJc refl_ObjectJc;  //the super class here used.
const struct SuperClasses_ThreadJc_s_ClassOffset_idxVtblJcARRAY_t  //Type for the super class
{ ObjectArrayJc head;
  ClassOffset_idxVtblJc data[1];
}  superClasses_ThreadJc_s =   //reflection instance for the super class
{ INIZ_ObjectArrayJc(superClasses_ThreadJc_s, 1, ClassOffset_idxVtblJc, refl_ClassOffset_idxVtblJc, ID_refl_ClassOffset_idxVtblJc)
  , { &refl_ObjectJc                                   
    , 0 //TODO Index of mtbl of superclass
      //The field which presents the superclass data in inspector access.
    , { "super"              
      , 0 //arraysize
      , &refl_ObjectJc  //type of super                                                                                         
      , kEmbedded_Modifier_reflectJc //hint: embd helps to show the real type.
        | (0<< kBitAccessLevel_Modifier_FieldJc)  //access level
        | (7<< kBitChangeLevel_Modifier_FieldJc)  //never change
      , 0 //offsetalways 0 (C++?)
      , 0  //offsetToObjectifcBase
      , &refl_ObjectJc  
      }
    }
};

const struct Reflection_Fields_ThreadJc_s_t
{ ObjectArrayJc head;
  FieldJc data[7];
} refl_Fields_ThreadJc_s =
{ INIZ_ObjectArrayJc(refl_Fields_ThreadJc_s, 7, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "hThread"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_void                                                                                            
    , 0 | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s*)(0x1000))->hThread)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ThreadJc
    }
  , 
    { "name"
    , 0   //no Array, no Bitfield                           
    , &refl_StringJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s*)(0x1000))->name)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ThreadJc
    }
  , 
    { "target"
    , 0   //no Array, no Bitfield                           
    , &refl_RunnableJcREF                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s*)(0x1000))->target)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ThreadJc
    }
  , 
    { "stackSize"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s*)(0x1000))->stackSize)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ThreadJc
    }
  , 
    { "state"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s*)(0x1000))->state)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ThreadJc
    }
  , 
    { "nPriority"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s*)(0x1000))->nPriority)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ThreadJc
    }
  , 
    { "sCalledName"
    , 0   //no Array, no Bitfield                           
    , REFLECTION_uint8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s*)(0x1000))->sCalledName)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ThreadJc
    }
  
} }; 
 

#define DEFINED_refl_ThreadJc    
const ClassJc   refl_ThreadJc =
{ INIZ_objReflId_ObjectJc(refl_ThreadJc, refl_ClassJc, ID_refl_ClassJc)
, "ThreadJc"
, 0
, sizeof(ThreadJc_s)
, (FieldJcArray const*)&refl_Fields_ThreadJc_s  //attributes and associations
, null  //method      
, &superClasses_ThreadJc_s.head.object  //superclass  
, null  //interfaces  
, mObjectJc_Modifier_reflectJc   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_ThreadJc_s_Y;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_ThreadJc_s_Y[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


extern_C const ClassJc refl_ObjectArrayJc;  //used for field head

extern_C const ClassJc refl_ThreadJc;  //used for field data

const struct Reflection_Fields_ThreadJc_s_Y_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_ThreadJc_s_Y =
{ INIZ_ObjectArrayJc(refl_Fields_ThreadJc_s_Y, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "head"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectArrayJc                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s_Y*)(0x1000))->head)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ThreadJc_s_Y
    }
  , 
    { "data"
    , 50 //nrofArrayElements                           
    , &refl_ThreadJc                                                                                            
    , 0 | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ThreadJc_s_Y*)(0x1000))->data)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ThreadJc_s_Y
    }
  
} }; 
 

#define DEFINED_refl_ThreadJc_s_Y    
const ClassJc   refl_ThreadJc_s_Y =
{ INIZ_objReflId_ObjectJc(refl_ThreadJc_s_Y, refl_ClassJc, ID_refl_ClassJc)
, "ThreadJc_s_Y"
, 0
, sizeof(ThreadJc_s_Y)
, (FieldJcArray const*)&refl_Fields_ThreadJc_s_Y  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL
