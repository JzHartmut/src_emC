
    
#include <emC/Jc/ListMapEntryJc.h>  


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_ListMapEntryJc;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_ListMapEntryJc[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


extern_C const ClassJc refl_ListMapEntryJc;  //used for field parent

extern_C const ClassJc refl_ListMapEntryJc;  //used for field previous

extern_C const ClassJc refl_ListMapEntryJc;  //used for field next

extern_C const ClassJc refl_ObjectJc;  //used for field allocater

extern_C const ClassJc refl_ObjectJc;  //used for field key

extern_C const ClassJc refl_ObjectJc;  //used for field element

const struct Reflection_Fields_ListMapEntryJc_t
{ ObjectArrayJc head;
  FieldJc data[6];
} refl_Fields_ListMapEntryJc =
{ INIZ_ObjectArrayJc(refl_Fields_ListMapEntryJc, 6, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "parent"
    , 0   //no Array, no Bitfield                           
    , &refl_ListMapEntryJc                                                                                            
    , 0 | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ListMapEntryJc*)(0x1000))->parent)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ListMapEntryJc
    }
  , 
    { "previous"
    , 0   //no Array, no Bitfield                           
    , &refl_ListMapEntryJc                                                                                            
    , 0 | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ListMapEntryJc*)(0x1000))->previous)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ListMapEntryJc
    }
  , 
    { "next"
    , 0   //no Array, no Bitfield                           
    , &refl_ListMapEntryJc                                                                                            
    , 0 | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ListMapEntryJc*)(0x1000))->next)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ListMapEntryJc
    }
  , 
    { "allocater"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectJc                                                                                            
    , 0 | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ListMapEntryJc*)(0x1000))->allocater)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ListMapEntryJc
    }
  , 
    { "key"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectJc                                                                                            
    , 0 | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ListMapEntryJc*)(0x1000))->key)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ListMapEntryJc
    }
  , 
    { "element"
    , 0   //no Array, no Bitfield                           
    , &refl_ObjectJc                                                                                            
    , 0 | kReference_Modifier_reflectJc //bitModifiers
    , (int16)( ((intptr_t)(&((ListMapEntryJc*)(0x1000))->element)) -0x1000 )
    , 0  //offsetToObjectifcBase                                                            
    , &refl_ListMapEntryJc
    }
  
} }; 
 

#define DEFINED_refl_ListMapEntryJc    
const ClassJc   refl_ListMapEntryJc =
{ INIZ_objReflId_ObjectJc(refl_ListMapEntryJc, refl_ClassJc, ID_refl_ClassJc)
, "ListMapEntryJc"
, 0
, sizeof(ListMapEntryJc)
, (FieldJcArray const*)&refl_Fields_ListMapEntryJc  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL
