
    
#include <emC/Base/VaArgBuffer_emC.h>  


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_VaArgBuffer_Data;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_VaArgBuffer_Data[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


const struct Reflection_Fields_VaArgBuffer_Data_s_t
{ ObjectArrayJc head;
  FieldJc data[1];
} refl_Fields_VaArgBuffer_Data_s =
{ INIZ_ObjectArrayJc(refl_Fields_VaArgBuffer_Data_s, 1, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "v"
    , 17 //nrofArrayElements                           
    , REFLECTION_int32                                                                                            
    , (4<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int32)(OFFSET_IN_STRUCT(VaArgBuffer_Data_s, v))
    , 0  //offsetToObjectifcBase                                                            
    , &refl_VaArgBuffer_Data
    }
  
} }; 
 

#define DEFINED_refl_VaArgBuffer_Data    
const ClassJc   refl_VaArgBuffer_Data =
{ INIZ_objReflId_ObjectJc(refl_VaArgBuffer_Data, refl_ClassJc, ID_refl_ClassJc)
, "VaArgBuffer_Data"
, 0
, sizeof(VaArgBuffer_Data_s)
, (FieldJcArray const*)&refl_Fields_VaArgBuffer_Data_s  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL


//forward declaration of the following definition necessary because extern_C definition. 
extern_C const ClassJc refl_VaArgBuffer;

#ifdef DEF_REFLECTION_OFFS_FILE  //experience: ReflOffs h-file-related
int32 const reflectionOffset_VaArgBuffer[] =
{ 123  //< &nrClass>   //index of class in Offset data
}; 
    
#else  //DEF_REFLECTION_FULL


extern_C const ClassJc refl_VaArgBuffer_Data;  //used for field data

const struct Reflection_Fields_VaArgBuffer_t
{ ObjectArrayJc head;
  FieldJc data[2];
} refl_Fields_VaArgBuffer =
{ INIZ_ObjectArrayJc(refl_Fields_VaArgBuffer, 2, FieldJc, refl_FieldJc, ID_refl_FieldJc)
, {  
    { "sType"
    , 16 //nrofArrayElements                           
    , REFLECTION_int8                                                                                            
    , (1<<kBitPrimitiv_Modifier_reflectJc) | kStaticArray_Modifier_reflectJc|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int32)(OFFSET_IN_STRUCT(VaArgBuffer, sType))
    , 0  //offsetToObjectifcBase                                                            
    , &refl_VaArgBuffer
    }
  , 
    { "data"
    , 0   //no Array, no Bitfield                           
    , &refl_VaArgBuffer_Data                                                                                            
    , 0|kEmbedded_Modifier_reflectJc //bitModifiers
    , (int32)(OFFSET_IN_STRUCT(VaArgBuffer, data))
    , 0  //offsetToObjectifcBase                                                            
    , &refl_VaArgBuffer
    }
  
} }; 
 

#define DEFINED_refl_VaArgBuffer    
const ClassJc   refl_VaArgBuffer =
{ INIZ_objReflId_ObjectJc(refl_VaArgBuffer, refl_ClassJc, ID_refl_ClassJc)
, "VaArgBuffer"
, 0
, sizeof(VaArgBuffer)
, (FieldJcArray const*)&refl_Fields_VaArgBuffer  //attributes and associations
, null  //method      
, null  //superclass  
, null  //interfaces  
, 0   
#ifdef DEF_ClassJc_Vtbl  
, null  //virtual table
#endif
};

#endif //DEF_REFLECTION_FULL
