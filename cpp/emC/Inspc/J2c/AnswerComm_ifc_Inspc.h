/**************************************************************************
 * This file is generated by Java2C
 **copyright***************************************************************
 *************************************************************************/
#ifndef __InspcJ2c_AnswerComm_ifc_Inspc_h__
#define __InspcJ2c_AnswerComm_ifc_Inspc_h__
#include <applstdef_emC.h>
#include "emC/Base/MemC_emC.h"        //basic concept

#include "emC/Jc/ObjectJc.h"        //basic concept

#include "emC/Jc/StringJc.h"        //used often



/* J2C: includes *********************************************************/


/*@CLASS_C AnswerComm_ifc_Inspc @@@@@@@@@@@@@@@@@@@@@@@@*/

typedef struct AnswerComm_ifc_Inspc_t
{ 
  union { ObjectJc object; } base; 
} AnswerComm_ifc_Inspc_s;
  

#define sizeof_AnswerComm_ifc_Inspc_s sizeof(AnswerComm_ifc_Inspc_s)


/**J2c: Definitions of the enhanced reference. It's conditinally because it may be defined in a included header before. */
#ifndef AnswerComm_ifc_InspcREFDEF
  //J2C: definition of enhanced reference where it was need firstly: 
  #define AnswerComm_ifc_InspcREFDEF
  struct AnswerComm_ifc_Inspc_t;
  typedef TYPE_EnhancedRefJc(AnswerComm_ifc_Inspc);
#endif

/**J2c: Definitions of the array forms. NOTE: The number of elements are a helper for debug, the really used number depends on the memory size! */
typedef struct AnswerComm_ifc_Inspc_X_t { ObjectArrayJc head; AnswerComm_ifc_InspcREF data[50]; } AnswerComm_ifc_Inspc_X;
typedef struct AnswerComm_ifc_Inspc_Y_t { ObjectArrayJc head; AnswerComm_ifc_Inspc_s data[50]; } AnswerComm_ifc_Inspc_Y;

 extern_C struct ClassJc_t const refl_AnswerComm_ifc_Inspc_s;
  


/**CONST_Type useable as initializer for embedded/stack-instances*/
#define CONST_AnswerComm_ifc_Inspc(OBJP) { CONST_ObjectJc(sizeof(AnswerComm_ifc_Inspc_s), OBJP, &refl_AnswerComm_ifc_Inspc_s), 0 }

/**J2C: finalize declaration. It is called by Garbage collector and inside other finalized methods.
 * It should be called by the user if the instance is removed. */
void finalize_AnswerComm_ifc_Inspc_F(ObjectJc* othis, ThCxt* _thCxt);




/**Sends an answer. 
* */
typedef int32 MT_txAnswer_AnswerComm_ifc_Inspc(ObjectJc* ithis, int32 nrofAnswerBytesPart, bool bLastTelg, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 txAnswer_AnswerComm_ifc_Inspc(ObjectJc* ithis, int32 nrofAnswerBytesPart, bool bLastTelg, ThCxt* _thCxt);

#ifdef DEF_ClassJc_Vtbl
/* J2C: Method table contains all dynamic linked (virtual) methods
 * of the class and all super classes and interfaces. */
 extern const char sign_Vtbl_AnswerComm_ifc_Inspc[]; //marker for methodTable check
typedef struct Vtbl_AnswerComm_ifc_Inspc_t
{ VtblHeadJc head;
  MT_txAnswer_AnswerComm_ifc_Inspc* txAnswer;
  Vtbl_ObjectJc ObjectJc;
} Vtbl_AnswerComm_ifc_Inspc;
#endif //def DEF_ClassJc_Vtbl



#if defined(__CPLUSPLUSJcpp) && defined(__cplusplus)
/* J2C: The C++-class-definition. */
class AnswerComm_ifc_Inspc : private AnswerComm_ifc_Inspc_s
{ public:

  virtual int32 txAnswer(int32 nrofAnswerBytesPart, bool bLastTelg)=0;
};

#endif /*__CPLUSPLUSJcpp*/

#endif //__InspcJ2c_AnswerComm_ifc_Inspc_h__
